#!/usr/bin/env node
var aws = require('aws-sdk');
var path = require('path');
var fs   = require('fs');
const args = require('yargs').argv;
const guid = require('uuid');
const jcf = require( "./jcf.json");

var projectDir="";

if( args.path)
{
  if( path.isAbsolute( args.path))
    projectDir = args.path
  else
  {
    projectDir = path.join(process.cwd(), args.path);
  }
} 
else if (args.name) 
{
    projectDir = path.join(process.cwd(), args.name);
}
else
{
    projectDir = process.cwd();
}

console.log( `Validating project in ${projectDir}`);
var config = {};

if(!fs.existsSync( projectDir))
{
  console.log( "projhect directory doesnt exist, exiting");
  process.exit();
}

if(fs.existsSync( path.join(projectDir,'project.json')))
{
  config = JSON.parse( fs.readFileSync( path.join(projectDir,'project.json')));
}
else
{
  console.log( "Cant find project.json this isnt a project directory, xiting");
  process.exit();
}
//its worth noting here that that folders in S3 are only attributes of objects
//so if there arent any objects the folder wont exist - they arent real
//directories and folders like in a usual filesystem. So when we initiate
//a JCF project we create the folder structure, and make sure those
//folders exist by adding empty files with the folder as the key.

console.log( `validating s3-root: ${jcf.s3.root}/${config.s3.root}`);
var s3 = new aws.S3();
var p = s3.headBucket({Bucket: jcf.s3.root}).promise();
p.then( function(data)
{
  console.log( "Root bucket exists");
  return s3.listObjectsV2({Bucket:jcf.s3.root}).promise();
})
.then( function(data)
{
  var pRoot = data.Contents.find( function( val, ind, arr)
  {
    return val.Key.startsWith(config.s3.root);
  });
  if(pRoot )
  {
    console.log( "Project root exists");
  }
  else
  {
    return new Promise((resolve, reject) => {
      reject("Project root cant be found");
    });
  }
})
.catch(function(err)
{
  console.log(err);
  console.log( "Your project folder structure seems to be malformed");
});

