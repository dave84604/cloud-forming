#!/usr/bin/env node
var aws = require('aws-sdk');
var path = require('path');
var fs   = require('fs');
const args = require('yargs').argv;
const guid = require('uuid');
const jcf = require( "./jcf");
const inst = require( './instances');
const cp = require('child_process');
const m = require("moment");
aws.config.update({region:'eu-west-2'});
const cf = new aws.CloudFormation();
const ec2 = new aws.EC2();

var repos = [];

console.log( "pulling git repos for project");
if( args.all )
{
}

if(args.stack )
{
}

if( args.instance )
{
}

if( !fs.existsSync('./project.json'))
{
  console.log( "This isnt  aproject directory - cant find project.json");
  process.exit();
}
var cfg = JSON.parse(fs.readFileSync('./project.json'));
console.log( `loaded project config for ${cfg.name}`);

for( var sKey in cfg.stacks )
{
  var stack = cfg.stacks[sKey];
  inst.each( stack.name, (instance, instId, stackId) =>
  {
    console.log( `Instance has id:${instId} in stack:${stackId}`);
    var serverKey = path.join( cfg.root, 'keys',`${instance.KeyName}.pem`);
    var pubIP = instance.PublicIpAddress;

    if( ! fs.existsSync(serverKey))
    {
	console.log( `Cant find server key in project at ${serverKey}`);
	process.exit();
    }
    var yumUpdates = cp.execSync
    (
		/*"yum check-update > /dev/null 2>&1;echo $?"`*/
		`ssh -i ${serverKey} ec2-user@${pubIP} "yum check-update"`
    ).toString();

    console.log( "YUM output: "+yumUpdates);
    var needsPull = parseInt(yumUpdates, 10);

    if( isNaN( needsPull))
    {
	  console.log(`error checking if if yum needs an update ${yumUpdates}`);
	  return;
    }
    else if( needsPull ==100 )
    {
	  var doYum = cp.execSync
	  ( 
		`ssh -i ${serverKey} ec2-user@${pubIP} "sudo yum update -y""`
	  );
	  console.log( `ran yum update on ${pubIP}`);
	  console.log( doYum );
	  console.log( "completed");
    }
    else if( needsPull ==0 )
    {
	  console.log( `server at ${pubIP} is up to date`);
    }
  });
}



