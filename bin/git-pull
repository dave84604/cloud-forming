#!/usr/bin/env node
var aws = require('aws-sdk');
var path = require('path');
var fs   = require('fs');
const args = require('yargs').argv;
const guid = require('uuid');
const jcf = require( "./jcf");
const inst = require( './instances');
const cp = require('child_process');
const m = require("moment");
const cfn = require( "cfn-functions");

aws.config.update({region:'eu-west-2'});
const cf = new aws.CloudFormation();
const ec2 = new aws.EC2();

var repos = [];

console.log( "pulling git repos for project");
if( args.all )
{
}

if(args.stack )
{
}

if( args.instance )
{
}

if( !fs.existsSync('./project.json'))
{
  console.log( "This isnt  aproject directory - cant find project.json");
  process.exit();
}
var cfg = JSON.parse(fs.readFileSync('./project.json'));
console.log( `loaded project config for ${cfg.name}`);

for( var sKey in cfg.stacks )
{
  var stack = cfg.stacks[sKey];
  inst.each( stack.name, (instance, instId, stackId) =>
  {
    console.log( `Instance has id:${instId} in stack:${stackId}`);
    var serverKey = path.join( cfg.root, 'keys',`${instance.KeyName}.pem`);
    var pubIP = instance.PublicIpAddress;

    if( ! fs.existsSync(serverKey))
    {
	console.log( `Cant find server key in project at ${serverKey}`);
	process.exit();
    }
    var repos = cfg.stacks[stack.name].git;

    for( var git in repos )
    {
	var gitInfo = repos[git];
	//console.log( "======================================");
	//console.log( gitInfo );
	//console.log( "======================================");

	var sshCmd = "\"cd "+gitInfo.path+";git fetch > /dev/null  2>&1;git branch -v | grep -E '"+gitInfo.branch+
		"' | grep -E 'ahead|behind' | sed -r 's/[ *]\s(\S*).*(\[(ahead|behind).+?\]).*/\1 \2/g'\"";
	var gitUpdates = cp.execSync
	(
		"ssh -tt -i "+serverKey+" ec2-user@"+pubIP+" "+ sshCmd
	).toString();

	console.log( "cmd:"+ gitUpdates);
	var expr = "^\\* ("+cfn.regExpEscape(gitInfo.branch)+") [A-Za-z0-9]+ \\[(behind) (\\d+)\\]";
	//console.log(" ->"+expr+"<-");
	var regExp = new RegExp( expr );
	var match = regExp.exec(gitUpdates,'g');
	//console.log( match );

	if(match)
	{
	  if(parseInt(match[3],10) > 0)
	  {
	    console.log( "got a repository that needs a pull");
	    var doPull = cp.execSync
	    ( 
		  `ssh -tt -i ${serverKey} ec2-user@${pubIP} \
		  "cd ${gitInfo.path}; \
		  git pull origin ${gitInfo.branch}"`
	    ).toString();
	    console.log( doPull);
	  }
	  else 
	  {
	    console.log( `confusing that the repo is behind by  ${match[3]} commits i dont know what to do`);
	  }
	}
	else 
	{
	  console.log( `repository in ${gitInfo.path} is up to date`);
	}
    }
  });
}



